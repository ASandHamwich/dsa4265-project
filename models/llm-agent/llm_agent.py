# -*- coding: utf-8 -*-
"""llm agent.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hJvZpjrnQW9m19tAcofsYgxfXmQICdVS
"""

import json
import os
import time
from typing import Dict, Any, Optional, List
import traceback

# Make sure OpenAI package is installed
try:
    from openai import OpenAI
except ImportError:
    print("Installing OpenAI package...")
    !pip install openai
    from openai import OpenAI

# Default banking product data
DEFAULT_BANKING_RAG_DATA = [
    {
      "bank": "dbs",
      "url": "https://www.dbs.com.sg/personal/cards/credit-cards/dbs-yuu-cards",
      "tag": "credit cards",
      "section": "DBS yuu CardFor both sides of yuu! > At a Glance",
      "text_snippet": "DBS yuu CardFor both sides of yuu!\nAt a Glance\n\nEarn up to 18% cash rebates or 10 miles per S$1NEW!\nWhen you hit S$600 qualified monthly spend\n\nEnjoy 5% cash rebates or 2.8 miles per S$1NEW!\nWith no minimum spend and no cap\n\nGet S$2 off eggs and rice monthly\nAt Cold Storage and Giant\nLimited time sign-up bonus: New to DBS/POSB Cardmembers can enjoy S$300 cashback with promo code: 'CASH300'.\nTable:\nDBS yuu Visa Card\tDBS yuu American Express® Card\nApply nowCompare cards\tApply nowCompare cards\nDBS yuu Visa Card DBS yuu American Express® Card\nDBS yuu Visa Card\nDBS yuu American Express® Card\nApply nowCompare cards Apply nowCompare cards\nApply nowCompare cards\nApply nowCompare cards\nDBS yuu American Express® Card\nApply now\nCompare cards\nApply now\nCompare cards\nTo apply through your digibank mobile app:Launch digibank app, login, select More > Apply > Cards.\n\nEarn up to 18% cash rebates or 10 miles per S$1NEW!\nWhen you hit S$600 qualified monthly spend\n\nEnjoy 5% cash rebates or 2.8 miles per S$1NEW!\nWith no minimum spend and no cap\n\nGet S$2 off eggs and rice monthly\nAt Cold Storage and Giant\nLimited time sign-up bonus: New to DBS/POSB Cardmembers can enjoy S$300 cashback with promo code: 'CASH300'.\nTable:\nDBS yuu Visa Card\tDBS yuu American Express® Card\nApply now\tApply now\nDBS yuu Visa Card DBS yuu American Express® Card\nDBS yuu Visa Card\nDBS yuu American Express® Card\nApply now Apply now\nApply now\nApply now\nDBS yuu American Express® Card\nApply now\nApply now\nTo apply through your digibank mobile app:Launch digibank app, login, select More > Apply > Cards.\n\nJet Set Go! Now you can choose cash rebates or miles:\nDBS yuu Cardmembers can now choose to enjoy 18% cash rebates or 10 miles per S$1 at participating yuu merchants like Cold Storage, Giant, foodpanda, Gojek and more (refer to full listing below). So pack your bags and let your spending take you further with DBS yuu Card.\n\nJet Set Go! Now you can choose cash rebates or miles:\nDBS yuu Cardmembers can now choose to enjoy 18% cash rebates or 10 miles per S$1 at participating yuu merchants like Cold Storage, Giant, foodpanda, Gojek and more (refer to full listing below). So pack your bags and let your spending take you further with DBS yuu Card.",
      "score": 0.5197107791900635
    },
    {
      "bank": "dbs",
      "url": "https://www.dbs.com.sg/i-bank/cards/debit-cards/dbs-visa-debit",
      "tag": "debit cards",
      "section": "DBS Visa Debit Card - Your Multi-Currency Card > Features & Benefits",
      "text_snippet": "DBS Visa Debit Card - Your Multi-Currency Card\nFeatures & Benefits\n\nTable:\n4% cashback on online food deliveryValid with a minimum of S$500 on Visa and cash withdrawals limit of S$400 and below in the same month.Click here for full Terms and conditions. Click here for Frequently Asked Questions.\n4% cashback on online food deliveryValid with a minimum of S$500 on Visa and cash withdrawals limit of S$400 and below in the same month.Click here for full Terms and conditions. Click here for Frequently Asked Questions.\n4% cashback on online food deliveryValid with a minimum of S$500 on Visa and cash withdrawals limit of S$400 and below in the same month.Click here for full Terms and conditions. Click here for Frequently Asked Questions.\n4% cashback on online food delivery\nList:\n- Valid with a minimum of S$500 on Visa and cash withdrawals limit of S$400 and below in the same month.\nValid with a minimum of S$500 on Visa and cash withdrawals limit of S$400 and below in the same month.\nClick here for full Terms and conditions. Click here for Frequently Asked Questions.\nTable:\n3% cashback on local transport (Ride-hailing, taxis, Transit - Simply Go)Valid with a minimum of S$500 on Visa and cash withdrawals limit of S$400 and below in the same month.Click here for full Terms and conditions. Click here for Frequently Asked Questions.\n3% cashback on local transport (Ride-hailing, taxis, Transit - Simply Go)Valid with a minimum of S$500 on Visa and cash withdrawals limit of S$400 and below in the same month.Click here for full Terms and conditions. Click here for Frequently Asked Questions.\n3% cashback on local transport (Ride-hailing, taxis, Transit - Simply Go)Valid with a minimum of S$500 on Visa and cash withdrawals limit of S$400 and below in the same month.Click here for full Terms and conditions. Click here for Frequently Asked Questions.\n3% cashback on local transport (Ride-hailing, taxis, Transit - Simply Go)\nList:\n- Valid with a minimum of S$500 on Visa and cash withdrawals limit of S$400 and below in the same month.\nValid with a minimum of S$500 on Visa and cash withdrawals limit of S$400 and below in the same month.\nClick here for full Terms and conditions. Click here for Frequently Asked Questions.\nUpsized 5% cashback with your DBS Visa Debit Card\nHere's how:\nTable:\nPeriod\tCashback\tValid for:\nMalaysia Weekend Exclusive4 Jan 2024 to 30 Mar 2025\tUp to 5% cashback every Sat & SunCapped at S$10 per week\tMalaysia Ringgit (MYR) spend\nAll other periods\t2% cashback\tAll foreign currencies spend\nPeriod Cashback Valid for:\nPeriod\nCashback\nValid for:\nMalaysia Weekend Exclusive4 Jan 2024 to 30 Mar 2025 Up to 5% cashback every Sat & SunCapped at S$10 per week Malaysia Ringgit (MYR) spend\nMalaysia Weekend Exclusive4 Jan 2024 to 30 Mar 2025\nUp to 5% cashback every Sat & SunCapped at S$10 per week\nMalaysia Ringgit (MYR) spend\nAll other periods 2% cashback All foreign currencies spend\nAll other periods\n2% cashback\nAll foreign currencies spend\nPeriod\nCashback\nValid for:\nMalaysia Weekend Exclusive\n4 Jan 2024 to 30 Mar 2025\nUp to 5% cashback every Sat & Sun\nCapped at S$10 per week\nMalaysia Ringgit (MYR) spend\nAll other periods\n2% cashback\nAll foreign currencies spend\n*Valid with a minimum of S$500 on Visa and cash withdrawals limit of S$400 and below in the same month. Click here for full Terms and Conditions. Click here for Frequently Asked Questions.\nSay goodbye to foreign currency transaction fees and hello to a convenient and safe way to spend when travelling!\nPay for shopping, dining and leisure with your DBS Visa Debit Card in up to 11 foreign currencies with no foreign exchange fees.\nSimply link your My Account as the primary account to your DBS Visa Debit Card. Your foreign currency transactions/withdrawal will be debited directly from the respective foreign currency wallet in your My Account.*\nThere are 11 available foreign currencies:\nDo note that Renminbi Offshore (CNH) is not available for the card feature.\n*Important notes:\nList:\n- Your My Account's foreign currency wallet must contain sufficient funds prior to making a transaction. Only then will your transaction be automatically debited from the respective foreign currency wallet without any foreign exchange conversion fees.\n- Ensure that your DBS Visa Debit Card is primary linked to your My Account and the correct currency is selected at point of transaction.\n- In some cases, depending on how the merchant processes your transaction, your transaction may be billed to you in another foreign currency other than the local currency.\n- Generally, overseas ATM withdrawals will be automatically deducted from your primary account. However, if prompted, please select \"Checking/Current Account\" to withdraw foreign currency cash overseas from your My Account using your DBS Visa Debit Card.\nYour My Account's foreign currency wallet must contain sufficient funds prior to making a transaction. Only then will your transaction be automatically debited from the respective foreign currency wallet without any foreign exchange conversion fees.\nEnsure that your DBS Visa Debit Card is primary linked to your My Account and the correct currency is selected at point of transaction.\nIn some cases, depending on how the merchant processes your transaction, your transaction may be billed to you in another foreign currency other than the local currency.\nGenerally, overseas ATM withdrawals will be automatically deducted from your primary account. However, if prompted, please select \"Checking/Current Account\" to withdraw foreign currency cash overseas from your My Account using your DBS Visa Debit Card.\nExchange currencies, pay zero overseas fees, and earn cashback easily!\nSimply set up your travel wallet by making your DBS Multiplier or My Account the primary account linked to your DBS Visa Debit Card.\nLearn more about your travel wallet.\nFor digibank mobile, please:\nFor digibank Online, please:\nTap and SimplyGo on buses and trains without having to top-up. You can also access your travel history and transactions anytime and anywhere via the TransitLink SimplyGo Portal or TL SimplyGo mobile app.\nClick here for more information.\nClick here for important notes.\nClick here for important notes.",
      "score": 0.49988865852355957
    },
    {
      "bank": "dbs",
      "url": "https://www.dbs.com.sg/personal/deposits/bank-with-ease/dbs-digi-bank-travel-mode",
      "tag": "digital services",
      "section": "Travel Mode > Features & Benefits of Travel Mode",
      "text_snippet": "Travel Mode\nFeatures & Benefits of Travel Mode\n\nPlan your trip\nAlso don't forget to visit DBS Travel & Leisure Marketplace, the most rewarding one-stop travel platform for DBS/POSB customers. Whether you are going on an overseas holiday or a business trip, you can book your flights and hotels there.\nWhat's more, you can also enjoy complimentary travel insurance (now enhanced with COVID-19 coverage), enjoy 2x more value when you pay with DBS Points and choose to split your purchase amount into flexible monthly instalments.\n\nBefore you fly\nTable:\nYou're finishing up work, packing for the trip, researching places to go. And you got to get the essentials in order. Skip the stress with Travel Mode.\nGet your card trip-readyActivate it for overseas use and raise the credit limit. Don't worry, you can block it with a tap if you misplace it on holiday.\nSort out your insuranceEnter your trip details and tap to purchase your travel insurance.\nMultiple currencies at your fingertipsForget about the money changers! With a My Account or DBS Multiplier Account, you can exchange and spend your foreign currencies in 71 countries at competitive rates. Anytime, anywhere. No fees. What's more, you can top up or transfer your excess funds back to your account after your trip!\n\nWhen you're overseas\nDodge all fees when you spend overseasJust link your DBS Visa Debit Card to your My Account or DBS Multiplier Account. Then shop, dine and live like a local without worrying about FX transaction fees.\nAlways know your FX balanceNot sure if you have enough for that one-of-a-kind original? Just tap and hold Peek Balance to view your foreign currency balance. And top it up easily if you need to.\nNever lose sight of your spendingKnow exactly where your money is going, so the only thing you'll bring back are great memories, not a blown budget.\n\nPlan your trip\nAlso don't forget to visit DBS Travel & Leisure Marketplace, the most rewarding one-stop travel platform for DBS/POSB customers. Whether you are going on an overseas holiday or a business trip, you can book your flights and hotels there.\nWhat's more, you can also enjoy complimentary travel insurance (now enhanced with COVID-19 coverage), enjoy 2x more value when you pay with DBS Points and choose to split your purchase amount into flexible monthly instalments.\n\nBefore you fly\nTable:\nYou're finishing up work, packing for the trip, researching places to go. And you got to get the essentials in order. Skip the stress with Travel Mode.\nGet your card trip-readyActivate it for overseas use and raise the credit limit. Don't worry, you can block it with a tap if you misplace it on holiday.\nSort out your insuranceEnter your trip details and tap to purchase your travel insurance.\nMultiple currencies at your fingertipsForget about the money changers! With a My Account or DBS Multiplier Account, you can exchange and spend your foreign currencies in 71 countries at competitive rates. Anytime, anywhere. No fees. What's more, you can top up or transfer your excess funds back to your account after your trip!\n\nWhen you're overseas\nDodge all fees when you spend overseasJust link your DBS Visa Debit Card to your My Account or DBS Multiplier Account. Then shop, dine and live like a local without worrying about FX transaction fees.\nAlways know your FX balanceNot sure if you have enough for that one-of-a-kind original? Just tap and hold Peek Balance to view your foreign currency balance. And top it up easily if you need to.\nNever lose sight of your spendingKnow exactly where your money is going, so the only thing you'll bring back are great memories, not a blown budget.\nDeposit Insurance SchemeSingapore dollar deposits of non-bank depositors and monies and deposits denominated in Singapore dollars under the Supplementary Retirement Scheme are insured by the Singapore Deposit Insurance Corporation, for up to S$100,000 in aggregate per depositor per Scheme member by law. Monies and deposits denominated in Singapore dollars under the CPF Investment Scheme and CPF Retirement Sum Scheme are aggregated and separately insured up to S$100,000 for each depositor per Scheme member. Foreign currency deposits, dual currency investments, structured deposits and other investment products are not insured.\nDeposit Insurance SchemeSingapore dollar deposits of non-bank depositors and monies and deposits denominated in Singapore dollars under the Supplementary Retirement Scheme are insured by the Singapore Deposit Insurance Corporation, for up to S$100,000 in aggregate per depositor per Scheme member by law. Monies and deposits denominated in Singapore dollars under the CPF Investment Scheme and CPF Retirement Sum Scheme are aggregated and separately insured up to S$100,000 for each depositor per Scheme member. Foreign currency deposits, dual currency investments, structured deposits and other investment products are not insured.",
      "score": 0.5225870013237
    },
    {
      "bank": "ocbc",
      "url": "https://www.ocbc.com/personal-banking/cards/90-degrees-travel-credit-card.page",
      "tag": "credit cards",
      "section": "OCBC 90°N card > Earn miles or cash rebates that never expire",
      "text_snippet": "OCBC 90°N card\nEarn miles or cash rebates that never expire\n\nWhy you will love this\nEarn up to 7 Miles (equivalent to 7% cash rebate) for every S$1 spent on Agoda\n\nWhy you will love this\nEarn 1.3 Miles (equivalent to 1.3% cash rebate) for every S$1 spent in SGD and 2.1 Miles (equivalent to 2.1% cash rebate) for every S$1 spent in foreign currency\n\nWhy you will love this\nEarn unlimited miles that never expire\n\nWho can apply\nSingaporean or Singapore PR above 21 years old with an annual income of at least S$30,000\n\nWho can apply\nForeigner above 21 years old with an annual income of at least S$45,000\n\nWhy you will love this\nEarn 1.3 Miles for every S$1 spent in SGD and 2.1 Miles for every S$1 spent in foreign currency\n\nWhy you will love this\nRedeem air miles, cash rebates and more\n\nWhy you will love this\nMiles never expire\n\nWho can apply\nSingaporean or Singapore PR above 21 years old with an annual income of at least S$30,000\n\nWho can apply\nForeigner above 21 years old with an annual income of at least S$45,000\n\nTraveldollar\nspent on bookings made onAgoda.\n\nTraveldollar\nspent on bookings made onAgoda.\n\nTraveldollar\nspent in foreign currency.\n\nTraveldollar\nspent in foreign currency.\n\nTraveldollar\nspent in local currency (SGD).\n\nTraveldollar\nspent in local currency (SGD).\n\nTraveldollar\nwhich are awarded as 90ÃN Miles for every S$5 spent in a transaction. 1 90ÃN Mile = 1 KrisFlyer Mile or 1% cashback.\n\nTraveldollar\nwhich are awarded as 90ÃN Miles for every S$5 spent in a transaction. 1 90ÃN Mile = 1 KrisFlyer Mile or 1% cashback.\n\n30-Jun-25\nJapan\n\n30-Jun-25\nFrance\n\n30-Jun-25\nHong Kong\n\n30-Jun-25\nTo qualify, simply activate these deals from theMastercard Travel Rewards portalquarterly before you spend.\n\nMaximise your miles\nFor a limited time only, exchange your 90N Miles at a 1:1 ratio for Cathay's Asia Miles. Valid from 1 November to 31 December 2024.For reference, 1 90°N Mile = 1 KrisFlyer Mile.\n\nMaximise your miles\nKrisFlyer Miles - viaOCBC Rewards\n\nMaximise your miles\nOther loyalty points - viaSTACK Marketplace\n\nMaximise your miles\nWhere to redeem Miles\n\nMaximise your miles\nKrisFlyer Miles - viaOCBC Rewards\n\nMaximise your miles\nOther loyalty points - viaSTACK Marketplace\n\nMaximise your miles\nPay for flights, hotels and car rental bookings using miles. Get preferential rates on the all-in-one booking platform Travel with OCBC.View disclaimer.\n\nMaximise your miles\nViaTravel with OCBC\n\nMaximise your miles\nWhere to redeem Miles\n\nMaximise your miles\nViaTravel with OCBC\n\nMaximise your miles\nOffset credit card bills with cash rebates of up to 2.1%. There is no limit or minimum spending required.\n\nMaximise your miles\nViaOCBC Rewards\n\nMaximise your miles\nWhere to redeem Miles\n\nMaximise your miles\nViaOCBC Rewards\n\nMaximise your miles\nExchange Miles for vouchers from popular retailers, or for products or experiences.View disclaimer.\n\nMaximise your miles\nViaSTACK Marketplace\n\nMaximise your miles\nWhere to redeem Miles\n\nMaximise your miles\nViaSTACK Marketplace\n\nMaximise your miles\nSingapore Airlines KrisFlyer\n\nMaximise your miles\nAir France - KLM Flying Blue\n\nMaximise your miles\nBritish Airways Executive Club\n\nMaximise your miles\nCathay\n\nMaximise your miles\nEtihad Guest\n\nMaximise your miles\nUnited MileagePlus\n\nMaximise your miles\nALL - Accor Live Limitless\n\nMaximise your miles\nIHG One Rewards\n\nMaximise your miles\nMarriott Bonvoy®\n\n90Nvisa Exclusivepromo\nNew OCBC 90°N Visa cardmembers get 4 complimentary DragonPass lounge visits (worth S$170). Just apply for the Card and charge at leastS$500 in retail purchases to it within 30 days of having your card approved. From now till 31 July 2024.\n\n90Nvisa Exclusivepromo\nDragonPass lets you enjoy access to over 1,300 lounges worldwide. You also get exclusive discounts at airport restaurants, and more.\n\n90Nvisa Exclusivepromo\nTo qualify for this offer, apply for a credit card via the link below. You will receive your gift within 4 months of meeting the minimum spending requirements.T&Cs, fees and charges apply.\n\nGetgo1 Dragonpass Steps\nACTIVATE YOUR MEMBERSHIP\n\nGetgo1 Dragonpass Steps\nACCESS A LOUNGE\n\nGetgo1 Dragonpass Steps\nDownload the DragonPass app and tap 'Activate Membership'\n\nGetgo1 Dragonpass Steps\nEnter the membership number and activation code we sent via SMS to your mobile number in our records. Then, tap 'Activate'\n\nGetgo1 Dragonpass Steps\nEnter your email address and all other required details. Then, tap 'Next'\n\nGetgo1 Dragonpass Steps\nCreate your password and tap 'Next' to activate the membership!\n\nGetgo1 Dragonpass Steps\nUse the search tool to find your desired airport\n\nGetgo1 Dragonpass Steps\nTap on \"Lounge\" to browse the list of available lounges at the selected airport\n\nGetgo1 Dragonpass Steps\nPresent your digital membership card and QR code to access the lounge\n\ncard privileges\nNot sure which 90°N Card is right for you? Discover the privileges you get as a 90°N Mastercard or Visa Cardmember.\n\ncard privileges\n90°N Mastercard\n\ncard privileges\n90°N Visa Card\n\ncard privileges\nEnjoy complimentary 3X 1GB 5-Day Flexiroam Data Plan per calendar year in over 200 countries and regions with a one-time setup, exclusively for OCBC 90N Mastercard cardmembers. Plus, enjoy 15% discount on all subsequent Flexiroam data plans.\n\ncard privileges\nLearn more\n\ncard privileges\nUnlock cash rebate when you shop from over 400 overseas merchants. Offers refresh every quarter. To qualify, simply activate the deals from Mastercard Travel Reward portal quarterly before you spend.\n\ncard privileges\nLearn more\n\ncard privileges\nWith VIP access to over 1,300 airport lounges worldwide, plus valuable dining offers available in airports via the mobile app, our airport pass has never been better.\n\ncard privileges\nLearn more\n\ncard privileges\nEnjoy a complimentary main course at participating restaurants in major cities across Asia Pacific.Terms and Conditions apply.\n\ncard privileges\nLearn more\n\ncard privileges\nGet S$3 off your next ride with Mastercard. Promotion applies to Comfort Delgro passengers who have not paid for a ride with Mastercard.\n\ncard privileges\nLearn more\n\ncard privileges\nRedeem your complimentary GrabTransport vouchers when you book a ride with Grab in Malaysia, Thailand, Indonesia, Philippines and Vietnam.\n\ncard privileges\nLearn more\n\ncard privileges\nGet 10% off when you charge at least S$60 to your 90°N Visa Card at SHEIN.Terms and Conditions apply.\n\ncard privileges\nEnjoy 20% off stays at IHG properties across Asia Pacific when you use your 90°N Visa Card.\n\ncard privileges\nLearn more\n\ncard privileges\nEnjoy up to 20% off your total bill at participating restaurants when you pay using your 90°N Visa Card.\n\ncard privileges\nLearn more\n\ncard privileges\nDiscover the privileges you get as an OCBC 90°N Visa Cardmember.\n\ncard privileges\nGet 10% off when you charge at least S$60 to your 90°N Visa Card at SHEIN.Terms and Conditions apply.\n\ncard privileges\nEnjoy 20% off stays at IHG properties across Asia Pacific when you use your 90°N Visa Card.\n\ncard privileges\nLearn more\n\ncard privileges\nEnjoy up to 20% off your total bill at participating restaurants when you pay using your 90°N Visa Card.\n\ncard privileges\nLearn more\n\nLatest Getgo1\nHere is why together is always better. Earn interest of up to 4.65% a year on the first S$100,000 in your OCBC 360 Account when you do more with us.\n\nLatest Getgo1\nFind out more\n\nLatest Getgo1\nTerms and conditions apply. Insured by up to S$100K by SDIC.\n\nLatest Getgo1\nAs a OCBC 90°N Cardholder, enter the promo codeBUY45Tto get45% offSingle Trip plans.For annual plans, enter the promo codeTAA15Ato get15% off.Promotion ends31 December 2024.\n\nLatest Getgo1\nApply now\n\nLatest Getgo1\nDisclaimer\n\nLatest Getgo1\nTerms and Conditions governing the 90°N x OCBC Explorer Promotion\n\nLatest Getgo1\nNew to CardUp1.5% admin fee for a one-off payment or the first payment of a recurring series of payments (up to S$10,000)Promo code:OCBC90N15\n\nLatest Getgo1\nNew to CardUp\n\nLatest Getgo1\n1.5% admin fee for a one-off payment or the first payment of a recurring series of payments (up to S$10,000)\n\nLatest Getgo1\nPromo code:OCBC90N15\n\nLatest Getgo1\nAlready have CardUp2% admin fee on all payment types (up to S$10,000)Promo codes:OCBC90NV(limited to 100 redemptions)\n\nLatest Getgo1\nAlready have CardUp\n\nLatest Getgo1\n2% admin fee on all payment types (up to S$10,000)\n\nLatest Getgo1\nPromo codes:OCBC90NV(limited to 100 redemptions)\n\nLatest Getgo1\nPromotions end 31 December 2024.\n\nLatest Getgo1\nSee how it works\n\nLatest Getgo1\n7 Miles for every S$1 spent on bookings made in foreign currency\n\nLatest Getgo1\n6 Miles for every S$1 spent on bookings made in SGD\n\nLatest Getgo1\nMiles are awarded as 90ÃN Miles for every S$5 spent in a transaction. Find out more about90°N Miles.\n\nLatest Getgo1\nSee bookingrequirements\n\nLatest Getgo1\nGet 22,000 Miles (awarded as 90°N Miles) with a Fee Upgrade of S$545 (including GST) and use them for your next holiday! SMS 72377 with:90Nupgrade <space> Last 8 digits of your 90N card number(E.g. 90Nupgrade 12345678).\n\nLatest Getgo1\nBy sending the SMS, you agree to theTerms and Conditions Governing the OCBC 90°N Card Annual Service Fee Option.\n\nLatest Getgo1\nEnjoy dining, shopping and travel offers provided by over 100 merchants.\n\nLatest Getgo1\nViewoffers\n\nLatest\nStand to win a Disney's Lilo & Stitch inspired family vacation in Hawaii! From 1 April to 30 June 2025, earn chances for every S$100 spent on your OCBC credit or debit cards.T&Cs apply. Insured up to S$100k by SDIC.\n\nLatest\nFind outmore\n\nLatest\nNew to CardUp1.55% admin fee for a one-off payment (up to S$10,000)Promo code:OCBC90N155Promotions end 31 March 2026.\n\nLatest\nNew to CardUp\n\nLatest\n1.55% admin fee for a one-off payment (up to S$10,000)\n\nLatest\nPromo code:OCBC90N155\n\nLatest\nPromotions end 31 March 2026.\n\nLatest\nAlready have CardUp2% admin fee for a one-off payment or the first payment of a recurring series of payments.Promo Codes:OCBC90NMCfor 90°N Mastercard,OCBC90NVfor 90°N Visa Card.\n\nLatest\nAlready have CardUp\n\nLatest\n2% admin fee for a one-off payment or the first payment of a recurring series of payments.\n\nLatest\nPromo Codes:OCBC90NMCfor 90°N Mastercard,OCBC90NVfor 90°N Visa Card.\n\nLatest\nPromotions end 31 March 2026.\n\nLatest\nSee how it works\n\nLatest\n7 Miles for every S$1 spent on bookings made in foreign currency\n\nLatest\n6 Miles for every S$1 spent on bookings made in SGD\n\nLatest\nMiles are awarded as 90ÃN Miles for every S$5 spent in a transaction. Find out more about90°N Miles.\n\nLatest\nSee bookingrequirements\n\nLatest\nGrab the popcorn - it's family movie time. Enjoy a year's worth of Disney+ Premium:\n\nLatest\nif you are a new OCBC customer who applies for OCBC 90°N Card and your card has been approved during the promotion period\n\nLatest\nLimited to the first 5,000 Eligible Cardmembers\n\nLatest\nApply nowApply now\n\nLatest\nHere is why together is always better. Earn interest of up to 4.65% a year on the first S$100,000 in your OCBC 360 Account when you do more with us.\n\nLatest\nFind out more\n\nLatest\nTerms and conditions apply. Insured by up to S$100K by SDIC.\n\nLatest\nEnjoy dining, shopping and travel offers provided by over 100 merchants.\n\nLatest\nViewoffers\n\nGetgo1Beforeyouapply\nMinimum age\n\nGetgo1Beforeyouapply\n21 years old\n\nGetgo1Beforeyouapply\nNationality\n\nGetgo1Beforeyouapply\nSingaporeans, Singapore PRs, E-Pass and S-Pass Holders\n\nGetgo1Beforeyouapply\nAnnual income\n\nGetgo1Beforeyouapply\nS$30,000 and above for Singaporeans and Singapore PRs\n\nGetgo1Beforeyouapply\nS$45,000 and above for foreigners\n\nGetgo1Beforeyouapply\nPrincipal card\n\nGetgo1Beforeyouapply\nS$196.20 (including GST), waived for the first year\n\nGetgo1Beforeyouapply\nPrincipal cardholders who pay the Annual Service Fee in 2024 will earn 10,000 bonus 90°N Miles.\n\nGetgo1Beforeyouapply\nSupplementary card\n\nGetgo1Beforeyouapply\nS$98.10 (including GST), waived for the first year\n\nGetgo1Beforeyouapply\nMinimum spending required to have your Annual Service Fee automatically waived\n\nGetgo1Beforeyouapply\nS$10,000\n\nGetgo1Beforeyouapply\nOther fees and charges\n\nGetgo1Beforeyouapply\nFees and charges\n\nGetgo1Beforeyouapply\nOCBC CardmembersAgreement\n\nGetgo1Beforeyouapply\nTerms and Conditions governing the 90°N x OCBC ExplorerPromotion\n\nGetgo1Beforeyouapply\nTerms and Conditions governing the OCBC 90ºN Card Annual Service FeeOption\n\nGetgo1Beforeyouapply\nTerms and Conditions Governing the OCBC 90°N Card Programme (with effect from 1 January2024)\n\nGetgo1Beforeyouapply\nTerms and Conditions governing the OCBC 90°N Visa Credit Card AcquisitionPromotion\n\nGetgo1Beforeyouapply\nCredit Bureau SingaporePlease note that additional time may be needed to review your application as Credit Bureau Singapore will be synchronizing data from 12am to 8am daily.MyInfoMyInfo will be temporarily unavailable from 2am to 8.30am every Wednesday and Sunday due to scheduled maintenance.System MaintenancePlease note that your product may not be availed to you instantly during system maintenance hours between 9.30pm to 6am.Deposit Insurance Scheme90°N Visa DragonPass Campaign: How to access your DragonPass membership\n\nBeforeyouapply\nMinimum age\n\nBeforeyouapply\n21 years old\n\nBeforeyouapply\nNationality\n\nBeforeyouapply\nSingaporeans, Singapore PRs, E-Pass and S-Pass Holders\n\nBeforeyouapply\nAnnual income\n\nBeforeyouapply\nS$30,000 and above for Singaporeans and Singapore PRs\n\nBeforeyouapply\nS$45,000 and above for foreigners\n\nBeforeyouapply\nPrincipal card\n\nBeforeyouapply\nS$196.20 (including GST), waived for the first year\n\nBeforeyouapply\nPrincipal cardholders who pay the Annual Service Fee in 2024 will earn 10,000 bonus 90°N Miles.\n\nBeforeyouapply\nSupplementary card\n\nBeforeyouapply\nS$98.10 (including GST), waived for the first year\n\nBeforeyouapply\nMinimum spending required to have your Annual Service Fee automatically waived\n\nBeforeyouapply\nS$10,000\n\nBeforeyouapply\nOther fees and charges\n\nBeforeyouapply\nFees and charges\n\nBeforeyouapply\nOCBC CardmembersAgreement\n\nBeforeyouapply\nTerms and Conditions governing the OCBC 90°N Card Programme (with effect from 1 January2024)\n\nBeforeyouapply\nTerms and Conditions governing the OCBC Credit Card Disney+ Sign-UpPromotion\n\nBeforeyouapply\nTerms and Conditions governing the OCBC 90°N Visa Credit Card AcquisitionPromotion\n\nBeforeyouapply\nCredit Bureau SingaporePlease note that additional time may be needed to review your application as Credit Bureau Singapore will be synchronizing data from 12am to 8am daily.MyInfoMyInfo will be temporarily unavailable from 2am to 8.30am every Wednesday and Sunday due to scheduled maintenance.System MaintenancePlease note that your product may not be availed to you instantly during system maintenance hours between 9.30pm to 6am.Deposit Insurance Scheme90°N Visa DragonPass Campaign: How to access your DragonPass membership\n\nReady to apply?\nor visit us at a branch.\n\nReady to apply?\nor visit us at a branch.\n\nFaqs Getgo1\nThere is no cap on the amount of 90°N Miles you can earn each month.\n\nFaqs Getgo1\nTransaction date refers to the date when a purchase is made.\n\nFaqs Getgo1\nPosting date refers to the date the transaction is received by the card issuer, OCBC Bank. As merchants may make a settlement a few days after the transaction has been made, posting date may be a few days later than the transaction date. As such, OCBC Bank has no control over when the merchant records the transaction.\n\nFaqs\nThere is no cap on the amount of 90°N Miles you can earn each month.\n\nFaqs\nTransaction date refers to the date when a purchase is made.\n\nFaqs\nPosting date refers to the date the transaction is received by the card issuer, OCBC Bank. As merchants may make a settlement a few days after the transaction has been made, posting date may be a few days later than the transaction date. As such, OCBC Bank has no control over when the merchant records the transaction.\n\nFaqs\nThe OCBC 90°N Mastercard and Visa Cards have different award rates to suit your needs and preferences.\n\nFaqs\nAs these two cards are on different card associations (Mastercard/Visa), they may also enjoy different card association specific or targeted promotions from time to time.\n\nFaqs\nYes, both cards share the same rewards currency. Accumulated 90°N Miles earned on either cards will be summed together and reflected as one rewards currency in your statement.",
      "score": 0.5046662092208862
    },
    {
      "bank": "ocbc",
      "url": "https://www.ocbc.com/personal-banking/cards/ocbc-debit-card.page",
      "tag": "credit cards",
      "section": "OCBC DEBIT CARD > The card that gives you limitless cashback",
      "text_snippet": "OCBC DEBIT CARD\nThe card that gives you limitless cashback\n\nWhy you will love this\nEarn unlimited 1% cashback on your daily Visa spending in selected categories\n\nWho can apply\nSingaporean, Singapore PR or foreigner above 16 years old\n\nEarnunlimited\nGrab\n\nEarnunlimited\nComfortDelGro\n\nEarnunlimited\nGo-Jek\n\nEarnunlimited\nTADA\n\nEarnunlimited\nTransitLink SimplyGo\n\nEarnunlimited\nLazada\n\nEarnunlimited\nShopee\n\nEarnunlimited\nNTUC Fairprice (including FairPrice Finest and FairPrice Xtra)\n\nEarnunlimited\nFairPrice Online\n\nEarnunlimited\nWarehouse Club\n\nEarnunlimited\nMcDonald's\n\nEarnunlimited\nSubway\n\nEarnunlimited\nBurger King\n\nEarnunlimited\nKFC\n\nEarnunlimited\nToast Box, and more\n\nDomore\nOCBC Debit Card\n\nDomore\nATM Card\n\nGetacard\nLock/unlock your card, report it lost, get a replacement or activate/deactivate ATM withdrawals via the OCBC Digital app.\n\nGetacard\nFind outmore\n\nGetacard\nLock/unlock your card, report it lost, get a replacement or activate/deactivate ATM withdrawals via the OCBC Digital app.\n\nGetacard\nFind outmore\n\nGetacard\nLink your OCBC Debit Card to a Multi-Currency Global Savings Account to avoid foreign currency transaction fees when you make online transactionsRemember to keep sufficient funds in the relevant currencies!\n\nGetacard\nFind outmore\n\nGetacard\nLink your OCBC Debit Card to a Multi-Currency Global Savings Account to avoid foreign currency transaction fees when you make online transactionsRemember to keep sufficient funds in the relevant currencies!\n\nGetacard\nFind outmore\n\nAloha! Win a trip to Hawaii with your ohana worth S$28,000\nStand to win a Disney's Lilo & Stitch inspired family vacation in Hawaii! From 1 April to 30 June 2025, earn chances for every S$100 spent on your OCBC credit or debit cards.T&Cs apply. Insured up to S$100k by SDIC.\n\nAloha! Win a trip to Hawaii with your ohana worth S$28,000\nFind outmore\n\nBeforeyouapply\nMinimum age\n\nBeforeyouapply\n16 years old\n\nBeforeyouapply\nAnnual income\n\nBeforeyouapply\nNo annual income required\n\nBeforeyouapply\nAnnual fee\n\nBeforeyouapply\nS$0\n\nBeforeyouapply\nReplacement card fee\n\nBeforeyouapply\nS$21.80 (including GST)\n\nBeforeyouapply\nOverseas ATM cash withdrawal service charge\n\nBeforeyouapply\n3% of the transaction amount, subject to a minimum of S$5 and maximum of S$20. There is no charge if you withdraw money from OCBC ATMs overseas.\n\nBeforeyouapply\nForeign currency transaction fee\n\nBeforeyouapply\n3.25%\n\nBeforeyouapply\nCurrency conversion fee\n\nBeforeyouapply\n2.80%\n\nBeforeyouapply\nOther fees and charges\n\nBeforeyouapply\nFind out more\n\nBeforeyouapply\nTerms and Conditions governing DepositAccount\n\nBeforeyouapply\nTerms and Conditions governing Electronic BankingServices\n\nBeforeyouapply\nTerms and Conditions governing OCBC Debit CardmembersAgreement\n\nBeforeyouapply\nTerms and Conditions governing the OCBC Debit Card CashbackProgramme\n\nBeforeyouapply\nTerms and Conditions governing the OCBC We Missed You 2025 H1Campaign\n\nBeforeyouapply\nTerms and Conditions governing OCBC Q2 2025 Deposits and CardsCampaign\n\nWAYS TO APPLY\nor visit us at a branch withthese documents.\n\nFaqs\nYou can apply for an OCBC Debit Card easily in Singapore. Apply online using MyInfo for instant approval or complete an online application form and we will get in touch in 5 working days. Alternatively, you can visit anOCBC branchnear you today.\n\nFaqs\nWithOCBC Personal Bankingservices, you can get your OCBC Debit Card in 3 simple steps, with instant approval. Connect via MyInfo to apply for an OCBC Debit Card online > verify your details and submit the application > Get a link to access your digital card and use it instantly.Find out more.\n\nFaqs\nLog in to OCBC Online Banking with your access code and PIN or fingerprint ID and select \"Card services\" on the left menu. Navigate to \"Activate credit/debit card\" on the mobile app. If using your desktop, click on Customer service, and under \"Cards\", select \"Activate credit/debit card\". Begin to activate your card according to the prompts.Find out more.\n\nFaqs\nLog in to OCBC Online Banking with your access code and PIN or fingerprint ID and select \"Card services\" on the left menu. Navigate to \"Change card daily limit\" on the mobile app. If using your desktop, select onCustomer service, and under \"Cards\" select \"Card withdrawal & spending limit\". Choose your OCBC Debit Card that you would like tocheck or change your limit for > update limit > tap on \"Next\" > Review and confirm. You'll have to authorise this action using OneToken.Find out more.\n\nFaqs\nSix weeks from the date of the letter, we will send an OCBC Debit Card to your address in our records - unless you tell us otherwise. For more information, refer to theseFAQs.",
      "score": 0.5032830238342285
    },
    {
      "bank": "ocbc",
      "url": "https://www.ocbc.com/personal-banking/cards/90-degrees-travel-credit-card.page",
      "tag": "credit cards",
      "section": "OCBC 90°N card > Earn miles or cash rebates that never expire",
      "text_snippet": "GetaCard\nLink your OCBC Debit Card to a Multi-Currency Global Savings Account to avoid foreign currency transaction fees when you make online transactions. Remember to keep sufficient funds in the relevant currencies!",
      "additional_info": "This is a composite entry created to represent the OCBC Multi-Currency Global Savings Account based on information in the original dataset."
    }
]

class FinTailorAI:
    """
    FinTailorAI class for generating personalized financial recommendations
    using OpenAI's GPT models.
    """

    def __init__(self, api_key: Optional[str] = None, model: str = "gpt-4o-mini"):
        """Initialize the FinTailorAI with OpenAI API credentials."""
        self.api_key = api_key or os.getenv("OPENAI_API_KEY")
        if not self.api_key:
            raise ValueError("API key not provided. Either pass it directly or set OPENAI_API_KEY environment variable.")

        self.client = OpenAI(api_key=self.api_key)
        self.model = model

    def _get_model(self):
        """Return the appropriate model to use, defaulting to gpt-3.5-turbo for gpt-4 to avoid rate limits."""
        return "gpt-3.5-turbo" if self.model == "gpt-4" else self.model

    def _validate_banking_data(self, banking_rag_data):
        """Return a list of valid banking data items."""
        valid_items = []
        if banking_rag_data and isinstance(banking_rag_data, list):
            for item in banking_rag_data:
                if isinstance(item, dict) and "bank" in item and "text_snippet" in item:
                    valid_items.append(item)
        return valid_items

    def _extract_financial_summary(self, financial_data):
        """Extract key financial metrics from financial data."""
        if not financial_data:
            return None

        banking_info = financial_data.get("banking_info", {})
        spending_insights = financial_data.get("spending_insights", {})

        monthly_income = banking_info.get("monthly_income", 0)
        total_expenses = spending_insights.get("total_expenses", 0)

        return {
            "income": monthly_income,
            "expenses": total_expenses,
            "surplus": monthly_income - total_expenses,
            "debt": sum(banking_info.get("debts", {}).values()),
            "assets": sum(banking_info.get("assets", {}).values()),
            "rate": spending_insights.get('savings_rate', '0%')
        }

    def _call_openai_with_retry(self, messages, model=None, max_tokens=1000, temperature=0.4):
        """Call OpenAI API with retry logic for rate limits."""
        model_to_use = model or self._get_model()
        max_retries = 3
        retry_delay = 2

        for attempt in range(max_retries):
            try:
                response = self.client.chat.completions.create(
                    model=model_to_use,
                    messages=messages,
                    max_tokens=max_tokens,
                    temperature=temperature
                )
                return response.choices[0].message.content.strip()
            except Exception as e:
                error_message = str(e)
                if "rate_limit" in error_message and attempt < max_retries - 1:
                    print(f"Rate limit hit, retrying in {retry_delay} seconds...")
                    time.sleep(retry_delay)
                    retry_delay *= 2  # Exponential backoff
                else:
                    raise e

    def _parse_questions(self, response_text):
        """Parse questions from API response text."""
        # First try to parse as JSON
        try:
            questions = json.loads(response_text)
            if isinstance(questions, list):
                return questions[:3]  # Limit to 3 questions max
        except json.JSONDecodeError:
            pass

        # If that fails, try to extract questions using regex
        import re

        # Look for questions in quotes
        potential_questions = re.findall(r'"([^"]+\?)"', response_text)
        if potential_questions:
            return potential_questions[:3]

        # Look for numbered questions
        numbered_questions = re.findall(r'\d+\.\s*(.+\?)', response_text)
        if numbered_questions:
            return numbered_questions[:3]

        return []

    def analyze_query_and_generate_questions(
        self,
        user_query: str,
        financial_data: Dict[str, Any] = None,
        banking_rag_data: List[Dict[str, Any]] = None
    ) -> List[str]:
        """Generate relevant follow-up questions based on user query and available data."""
        model_to_use = self._get_model()

        # Create the original detailed prompt for query analysis
        analysis_prompt = (
            "You are a financial advisor analyzing a user's financial question. "
            "Your goal is to identify what additional information would help provide "
            "a more personalized recommendation.\n\n"
            f"User's Question:\n{user_query}\n\n"
        )

        # Add financial summary if available
        if financial_data:
            banking_info = financial_data.get("banking_info", {})
            spending_insights = financial_data.get("spending_insights", {})
            user_financial_profile = self._format_financial_profile(banking_info, spending_insights)
            analysis_prompt += f"User's Financial Profile:\n{user_financial_profile}\n\n"
        else:
            analysis_prompt += "Note: No financial profile data has been provided by the user.\n\n"

        # Add banking information
        valid_banking_items = self._validate_banking_data(banking_rag_data)
        if valid_banking_items:
            banking_context = "Available Banking Products Context:\n"
            for i, item in enumerate(valid_banking_items[:5], 1):  # Limit to top 5 items for brevity
                bank = item["bank"].upper()
                tag = item.get("tag", "").title()
                text = item.get("text_snippet", "").strip()
                banking_context += f"{i}. {bank} - {tag}: {text}\n"
            analysis_prompt += f"{banking_context}\n\n"
        else:
            analysis_prompt += "Note: No banking product data has been provided.\n\n"

        analysis_prompt += (
            "Based on this information, generate 1-3 follow-up questions that would help you provide a more tailored recommendation. "
            "These questions should:\n"
            "1. Be specific and directly relevant to their financial goal\n"
            "2. Ask for information not already available (including basic financial information if none was provided)\n"
            "3. Help you understand their personal preferences, risk tolerance, timeline, or banking preferences\n"
            "4. Be conversational and easy to answer\n\n"
            "Format your response as a JSON array of strings, with each string being a question. "
            "Example format: [\"Question 1?\", \"Question 2?\", \"Question 3?\"]\n\n"
            "If you believe you have all necessary information, return an empty array: []"
        )

        try:
            response_text = self._call_openai_with_retry(
                messages=[
                    {"role": "system", "content": "You are a financial analysis assistant with specific knowledge of Singapore banking products."},
                    {"role": "user", "content": analysis_prompt}
                ],
                model=model_to_use,
                temperature=0.7,
                max_tokens=200
            )
            return self._parse_questions(response_text)
        except Exception as e:
            print(f"Error generating follow-up questions: {str(e)}")
            return []

    def generate_financial_recommendation(
        self,
        user_query: str,
        financial_data: Dict[str, Any] = None,
        banking_rag_data: List[Dict[str, Any]] = None,
        additional_info: Dict[str, str] = None,
        max_tokens: int = 1000,
        temperature: float = 0.4
    ) -> str:
        """Generate personalized financial recommendations based on user query and available data."""
        model_to_use = self._get_model()

        # Use the original comprehensive system prompt
        system_prompt = (
            "You are a highly knowledgeable and empathetic financial advisor with expertise in "
            "personal finance, budgeting, debt management, investing, and long-term financial planning, "
            "with specific knowledge about Singapore's banking products and services. "
            "Your goal is to provide personalized, actionable financial advice that addresses the user's "
            "specific situation and query, incorporating relevant banking products when appropriate. You should:"
            "\n- Analyze any provided financial data thoroughly, if available"
            "\n- Consider the user's specific goals, concerns, and personal information shared"
            "\n- Reference specific banking products from the RAG data when available and relevant"
            "\n- Provide clear, step-by-step explanations for your recommendations"
            "\n- Use specific numbers and timeframes when providing projections, if sufficient data is available"
            "\n- Adjust your advice based on the level of information available"
            "\n- Structure your response as a conversational paragraph (no bullet points or headers)"
            "\n- Acknowledge when you're providing general advice due to limited information"
        )

        # Create the detailed user prompt with the original structure
        user_prompt = f"User's Financial Goal:\n{user_query}\n\n"

        # Add financial profile if available
        if financial_data:
            banking_info = financial_data.get("banking_info", {})
            spending_insights = financial_data.get("spending_insights", {})
            user_financial_profile = self._format_financial_profile(banking_info, spending_insights)
            user_prompt += f"User's Financial Profile:\n{user_financial_profile}\n\n"
        else:
            user_prompt += "Note: No financial profile data has been provided by the user.\n\n"

        # Add banking information with the original formatting
        valid_banking_items = self._validate_banking_data(banking_rag_data)
        if valid_banking_items:
            rag_info_text = "Relevant Banking Products and Services:\n\n"

            # Group by bank and tag for better organization
            bank_tag_groups = {}
            for item in valid_banking_items:
                bank = item["bank"].upper()
                tag = item.get("tag", "").title()
                key = f"{bank} - {tag}"

                if key not in bank_tag_groups:
                    bank_tag_groups[key] = []

                bank_tag_groups[key].append(item)

            # Format each group
            for group_key, items in bank_tag_groups.items():
                rag_info_text += f"# {group_key}:\n"

                for item in items:
                    section = item.get("section", "")
                    text = item.get("text_snippet", "").strip()
                    url = item.get("url", "")

                    if section and text:
                        rag_info_text += f"- {section}: {text}\n"
                        if url:
                            rag_info_text += f"  More info: {url}\n"

                rag_info_text += "\n"

            user_prompt += f"{rag_info_text}\n"
        else:
            user_prompt += "Note: No specific banking product data has been provided.\n\n"

        # Add additional information with original formatting
        if additional_info and len(additional_info) > 0:
            additional_info_text = "Additional Information from User:\n"
            for question, answer in additional_info.items():
                additional_info_text += f"Q: {question}\nA: {answer}\n\n"
            user_prompt += f"{additional_info_text}\n"

        # Use the original detailed instructions
        user_prompt += (
            f"Based on the above information, please provide a financial recommendation "
            f"that directly addresses the user's goal. "
        )

        # Adjust instructions based on available data
        if financial_data:
            user_prompt += "Tailor your advice to their specific financial situation. "
        else:
            user_prompt += "Provide general advice, acknowledging the lack of specific financial details. "

        if valid_banking_items:
            user_prompt += "If appropriate, recommend specific banking products or services from the relevant banking information that would meet their needs. "

        user_prompt += (
            f"Include actions they should take and explain your reasoning. "
            f"Your recommendation should be practical, actionable, and as personalized as possible given the available information."
        )

        try:
            return self._call_openai_with_retry(
                messages=[
                    {"role": "system", "content": system_prompt},
                    {"role": "user", "content": user_prompt}
                ],
                model=model_to_use,
                max_tokens=max_tokens,
                temperature=temperature
            )
        except Exception as e:
            return f"Error generating recommendation: {str(e)}"

    def _format_financial_profile(self, banking_info: Dict[str, Any], spending_insights: Dict[str, Any]) -> str:
        """Format banking information and spending insights into a readable format."""
        # Calculate key financial metrics
        monthly_income = banking_info.get("monthly_income", 0)
        total_expenses = spending_insights.get("total_expenses", 0)
        total_debt = sum(banking_info.get("debts", {}).values())
        total_assets = sum(banking_info.get("assets", {}).values())
        net_worth = total_assets - total_debt
        monthly_surplus = monthly_income - total_expenses

        # Format the financial profile as a structured text block
        profile = (
            f"Monthly Income: ${monthly_income}\n"
            f"Monthly Expenses: ${total_expenses}\n"
            f"Monthly Surplus: ${monthly_surplus}\n"
            f"Savings Rate: {spending_insights.get('savings_rate', '0%')}\n\n"
            f"Net Worth: ${net_worth}\n"
            f"Total Assets: ${total_assets}\n"
        )

        # Add asset details
        for asset_name, asset_amount in banking_info.get("assets", {}).items():
            profile += f"- {asset_name.replace('_', ' ').title()}: ${asset_amount}\n"

        profile += f"\nTotal Debt: ${total_debt}\n"

        # Add detailed debt information
        for debt_name, debt_amount in banking_info.get("debts", {}).items():
            profile += f"- {debt_name.replace('_', ' ').title()}: ${debt_amount}\n"

        profile += "\nMonthly Spending Breakdown:\n"

        # Add spending breakdown
        for category, amount in spending_insights.get("categories", {}).items():
            percentage = (amount / total_expenses) * 100 if total_expenses > 0 else 0
            profile += f"- {category.replace('_', ' ').title()}: ${amount} ({percentage:.1f}%)\n"

        return profile


def load_json_file(file_path: str) -> Dict[str, Any]:
    """Load data from a JSON file."""
    try:
        with open(file_path, 'r') as f:
            return json.load(f)
    except Exception as e:
        print(f"Error loading JSON from {file_path}: {str(e)}")
        return {}


def generate_financial_advice(
    user_query: str,
    financial_data: Dict[str, Any] = None,
    banking_rag_data: List[Dict[str, Any]] = None,
    api_key: Optional[str] = None,
    with_followup_questions: bool = True
) -> str:
    """Generate financial advice based on user query and available data."""
    # Use default banking data if none provided
    if banking_rag_data is None:
        banking_rag_data = DEFAULT_BANKING_RAG_DATA

    try:
        # Initialize the FinTailorAI advisor
        financial_advisor = FinTailorAI(api_key=api_key)

        if with_followup_questions:
            # Get follow-up questions based on the query
            followup_questions = financial_advisor.analyze_query_and_generate_questions(
                user_query, financial_data, banking_rag_data
            )

            # If we have follow-up questions, ask them
            additional_info = {}
            if followup_questions:
                print("\nTo provide a more tailored recommendation, I'd like to ask you a few questions:")
                for i, question in enumerate(followup_questions, 1):
                    print(f"\n{i}. {question}")
                    answer = input("Your answer (press Enter to skip): ")
                    if answer.strip():
                        additional_info[question] = answer
                    time.sleep(0.5)  # Slight delay for better user experience

                if additional_info:
                    print("\nThanks for providing additional information. Generating your recommendation...")
                else:
                    print("\nNo additional information provided. Generating recommendation based on available information...")
            else:
                data_sources = ["banking products information"]
                if financial_data:
                    data_sources.insert(0, "your financial profile")

                print(f"\nGenerating your recommendation based on {' and '.join(data_sources)}...")

            # Generate recommendation with additional information
            return financial_advisor.generate_financial_recommendation(
                user_query=user_query,
                financial_data=financial_data,
                banking_rag_data=banking_rag_data,
                additional_info=additional_info
            )
        else:
            # Generate recommendation without follow-up questions
            return financial_advisor.generate_financial_recommendation(
                user_query=user_query,
                financial_data=financial_data,
                banking_rag_data=banking_rag_data
            )

    except Exception as e:
        return f"Error generating financial advice: {str(e)}\n{traceback.format_exc()}"


def run_interactive_advisor(financial_json_path: str = None, banking_rag_json_path: str = None):
    """Run an interactive financial advisor that uses JSON inputs for financial data and banking RAG data."""
    print("\n" + "="*80)
    print("Welcome to FinTailorAI - Your Personal Financial Advisor with Banking Product Insights!")
    print("="*80)

    # Load data
    financial_data = None
    if financial_json_path:
        print(f"Loading financial data from {financial_json_path}...")
        financial_data = load_json_file(financial_json_path)
        if financial_data:
            print("Financial data loaded successfully!")
        else:
            print("Failed to load financial data. No financial data will be used in analysis.")
    else:
        print("No financial JSON file specified. No financial data will be used in analysis.")

    # Load banking RAG data if provided, otherwise use default
    banking_rag_data = DEFAULT_BANKING_RAG_DATA
    if banking_rag_json_path:
        print(f"Loading banking information data from {banking_rag_json_path}...")
        custom_banking_data = load_json_file(banking_rag_json_path)
        if custom_banking_data:
            print("Banking information data loaded successfully!")
            # If loaded as a dictionary with a root key, extract the list
            if isinstance(custom_banking_data, dict) and "results" in custom_banking_data:
                banking_rag_data = custom_banking_data["results"]
            else:
                banking_rag_data = custom_banking_data
        else:
            print("Failed to load banking information data. Using default banking product data.")
    else:
        print("No banking information JSON file specified. Using default banking product data.")

    # Show status message based on available data
    data_sources = ["banking product information"]
    if financial_data:
        data_sources.insert(0, "your financial profile")

    print(f"\nReady to provide financial advice based on {' and '.join(data_sources)}!")
    print("Enter your financial questions or goals below.")
    print("Type 'exit' to quit, 'status' to see available data, or 'help' for assistance.")

    # Define command handlers
    def display_help():
        print("\nHere are some example questions you can ask:")
        print("- How can I build an emergency fund with Singapore banks?")
        print("- What's the best way to pay off credit card debt?")
        print("- Should I invest more or pay down debt?")
        print("- What credit cards in Singapore are good for my spending habits?")
        print("- What's a good savings goal for me?")
        print("- Which debit card would be best for my situation?")

    def display_status():
        print("\nAvailable Data:")
        if financial_data:
            print("✓ Financial profile data is loaded")
            banking_info = financial_data.get("banking_info", {})
            spending_insights = financial_data.get("spending_insights", {})
            if "banking_info" in financial_data:
                print(f"  - Income: ${banking_info.get('monthly_income', 0)}/month")
                print(f"  - Total Debt: ${sum(banking_info.get('debts', {}).values())}")
                print(f"  - Total Assets: ${sum(banking_info.get('assets', {}).values())}")
            if "spending_insights" in financial_data:
                print(f"  - Expenses: ${spending_insights.get('total_expenses', 0)}/month")
        else:
            print("✗ No financial profile data loaded")

        print("✓ Banking product information is loaded")
        # Group banking information by bank and card type
        bank_info = {}
        for item in banking_rag_data:
            if isinstance(item, dict) and "bank" in item and "tag" in item:
                bank = item["bank"].upper()
                tag = item["tag"].title()

                if bank not in bank_info:
                    bank_info[bank] = set()

                bank_info[bank].add(tag)

        for bank, tags in bank_info.items():
            print(f"  - {bank}: {', '.join(sorted(tags))}")

    # Command mapping
    commands = {
        "exit": lambda: "exit",
        "quit": lambda: "exit",
        "help": display_help,
        "status": display_status
    }

    try:
        while True:
            user_query = input("\nYour financial question: ")
            cmd = user_query.lower()

            if cmd in commands:
                result = commands[cmd]()
                if result == "exit":
                    print("\nThank you for using FinTailorAI. Goodbye!")
                    break
                continue

            # Ensure the query ends with a question mark for better AI parsing
            if not user_query.endswith("?"):
                user_query += "?"

            # Generate and display the recommendation
            recommendation = generate_financial_advice(
                user_query=user_query,
                financial_data=financial_data,
                banking_rag_data=banking_rag_data,
                with_followup_questions=True
            )

            print("="*80)
            print("Financial Recommendation:")
            print("="*80)
            print(recommendation)
            print("="*80)

    except KeyboardInterrupt:
        print("\n\nSession interrupted by user.")
        print("\nThank you for using FinTailorAI! We hope our financial advice was helpful.")
        print("Have a great day and remember to make smart financial choices!\n")
    except Exception as e:
        print(f"\nAn unexpected error occurred: {str(e)}")
        traceback.print_exc()


# Example usage
if __name__ == "__main__":
    # Set your OpenAI API key
    os.environ["OPENAI_API_KEY"] = "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" # Set the entered key

    print("\nTo use your own data, you can upload:")
    print("1. A financial data JSON file with your banking info and spending insights")
    print("2. A banking information JSON file with relevant banking product information")
    print("If you don't provide a financial data file, no personal financial data will be used.")
    print("If you don't provide a banking data file, default banking product information will be used.\n")

    try:
        import google.colab
        from google.colab import files
        IS_COLAB = True
    except ImportError:
        IS_COLAB = False

    financial_json_path = None
    banking_rag_json_path = None

    # Handle file uploads
    if IS_COLAB:
        # Financial data file
        if input("Do you want to upload your own financial data? (y/n): ").lower() == 'y':
            print("\nUpload your financial data JSON file:")
            try:
                uploaded = files.upload()
                if uploaded:
                    financial_json_path = list(uploaded.keys())[0]
            except Exception as e:
                print(f"Error uploading financial data file: {str(e)}")

        # Banking RAG data file
        if input("Do you want to upload custom banking information data? (y/n): ").lower() == 'y':
            print("\nUpload your banking information JSON file:")
            try:
                uploaded = files.upload()
                if uploaded:
                    banking_rag_json_path = list(uploaded.keys())[0]
            except Exception as e:
                print(f"Error uploading banking information file: {str(e)}")
    else:
        # For regular Python environments
        if input("Do you want to use a custom financial data file? (y/n): ").lower() == 'y':
            financial_json_path = input("Enter path to financial JSON file (or press Enter to skip): ")
            if not financial_json_path:
                financial_json_path = None

        if input("Do you want to use a custom banking information file? (y/n): ").lower() == 'y':
            banking_rag_json_path = input("Enter path to banking information JSON file (or press Enter to skip): ")
            if not banking_rag_json_path:
                banking_rag_json_path = None

    # Run the interactive advisor
    run_interactive_advisor(financial_json_path, banking_rag_json_path)